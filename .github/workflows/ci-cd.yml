name: Eventia CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install backend dependencies
      working-directory: ./eventia-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint pytest
    
    - name: Lint backend code
      working-directory: ./eventia-backend
      run: pylint --disable=C0111,C0103,C0303,C0330,C0326 *.py
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: './eventia-ticketing-flow/yarn.lock'
    
    - name: Install frontend dependencies
      working-directory: ./eventia-ticketing-flow
      run: yarn install
    
    - name: Lint frontend code
      working-directory: ./eventia-ticketing-flow
      run: yarn lint
    
    - name: Build frontend
      working-directory: ./eventia-ticketing-flow
      run: yarn build
  
  deploy:
    name: Deploy
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./eventia-backend
        file: ./eventia-backend/Dockerfile.prod
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/eventia-backend:latest
    
    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./eventia-ticketing-flow
        file: ./eventia-ticketing-flow/Dockerfile.prod
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/eventia-frontend:latest
    
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /opt/eventia
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d 