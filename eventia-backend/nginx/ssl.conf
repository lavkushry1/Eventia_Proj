# SSL Configuration for Eventia Backend (api.eventia.live)
# This configuration ensures A+ rating on SSL Labs

server {
    listen 80;
    server_name api.eventia.live;
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # ACME challenge directory for Let's Encrypt certificate issuance and renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl http2;
    server_name api.eventia.live;
    
    # SSL certificate locations
    ssl_certificate /etc/letsencrypt/live/api.eventia.live/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.eventia.live/privkey.pem;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/api.eventia.live/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # SSL session caching
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # Diffie-Hellman parameters
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # Modern SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Application root
    root /usr/share/nginx/html;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; connect-src 'self'; frame-ancestors 'self'; form-action 'self';" always;
    
    # Public Key Pinning Header
    add_header Public-Key-Pins 'pin-sha256="base64+primary=="; pin-sha256="base64+backup=="; max-age=5184000; includeSubDomains' always;
    
    # Proxy settings for the backend application
    location / {
        proxy_pass http://localhost:3003;  # Point to the Flask application port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
    }
    
    # Location for the SSL health check endpoint
    location /ssl-health {
        access_log off;
        return 200 'SSL is working!';
        add_header Content-Type text/plain;
    }
    
    # Well-known security.txt file
    location /.well-known/security.txt {
        alias /usr/share/nginx/html/.well-known/security.txt;
    }
} 